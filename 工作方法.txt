先把demo写出来！！！

上级交代的工作要有始有终，把工作相关的文档收集起来，方便查阅，工作完成进度及时汇报，有风险点及时提出；无法完成的情况，要搞明白原因。任务交接，也要有一个明确的点，什么时间，交给什么人，口头或者书面确认交接成功。


每个功能点要考虑清楚再做，做到完美，没有bug。对自己做过的东西负责，不能留坑让别人弥补；就算因此带来的进度变慢，也是可以理解的。不在乎量多，要在于代码质量高。
上级交代一个问题：
不要回答不能做！
先考虑做完这些事情需要的元素：
多长时间，几个人，这些人需要什么技术，困难点在哪里，有什么阻碍。



工作不忙的时候也不能松懈，安排好时间，做好技术积累，为将要到来的工作做好技术准备。

对于一份未知的工作或者任务，要查阅相关的文档，了解来龙去脉，了解其中原理，然后结合自身资源，再做判断和结论。

以后出去工作，不行了，应该可以回头找上一家的老板，前提是让这个老板觉得你是一个靠谱，顶得住事情的人。所以，现在做的工作要努力获得老板的认可，自己也要享受这个努力变得完美的过程。

对于未来的规划：
30岁做到什么职位；
35岁做到什么职位；
40岁；
40岁以后。。。
做到相应的职位，要付出什么要的努力？

在工作和生活中，要做一个推动者，推动工作向前走；想到他人和领导没有想到的方面，提出建议和异议；
即使在推动的过程中，遇到挫折，遇到困难，也要要找方法解决，不要气馁；在遇到问题解决问题的过程中，就进步了。


对自己做的事情要负责：出现问题，先看跟自己的模块有没有关联，有，看看是不是自己负责的模块出了问题，自己的模块出了问题，自己默默修掉，自己的问题和自己人沟通，不要让别人知道。修改完了，打包，通知相关人员（测试），进行测试发布。
出现了问题，尽量别让别人知道，和与负责这件事情相关的人讨论。让外人知道，会被打脸，领导的面子过不去。



顶住一片天，对自己的模块负责起来，在这个模块，不能让别人比你更熟悉。
















